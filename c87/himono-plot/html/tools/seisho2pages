#!/usr/bin/env coffee

seisho = process.argv[2] || "../All-apologies-seisho.txt"
output = process.argv[3] || "./lib/pages.js"

fs = require 'fs'

ln = fs.readFileSync seisho, 'utf8'
  .split '\n'
  .map (l) -> do l.trim
  .filter (l) -> not not l

###
# BG:*.jpg
# CG:*.jpg
# SE:*.wav
# change:blackout
# BGM:*.mp3
###

parse = (l) ->
  list = l.split ':'
  pref = list[0]
  switch pref
    when "BG" then { bg: "img/bg/"+list[1] }
    when "CG" then { cg: "img/cg/"+list[1] }
    when "SE" then { se: "music/se/"+list[1] }
    when "change"
      if list[1] is "blackout"
        { change: "blackout" }
      else
        throw new Error l
    when "BGM" then { bgm: "music/bgm/"+list[1]}
    else { text: l }

ln = ln.map parse
I = ln.length

last = (type, idx) ->
  return false if idx < 1
  for i in [idx - 1 .. 0]
    return ln[i][type] if ln[i][type]?
  return false

page = (i) ->

  return ln[i] if ln[i]?.change is "blackout"

  return false if (not ln[i].text?) and (not ln[i].cg?)

  ret = {}
  if ln[i].text?
    ret.text = ln[i].text
    reg = /^(.*)「.*」$/
    ret.speaker = if reg.test ln[i].text then ln[i].text.match(reg)[1] else false

  if ln[i].cg?
    ret.cg = ln[i].cg

  ret.se = if ln[i-1]?.se? then ln[i-1].se else false
  ret.bg = last "bg", i
  ret.bgm = last "bgm", i
  ret

pages = []
for i in [0 ... I]
  p = page i
  pages.push p if p

images = []
for i in [0 ... I]
  images.push ln[i].bg if ln[i].bg?
  images.push ln[i].cg if ln[i].cg?


fs.writeFileSync output, "// generated by tools/seisho2pages\n"
fs.appendFileSync output, ";window.music = []\n"
fs.appendFileSync output, ";window.images = \n"
fs.appendFileSync output, JSON.stringify images
fs.appendFileSync output, "\n"
fs.appendFileSync output, ";window.pages = \n"
fs.appendFileSync output, JSON.stringify pages
fs.appendFileSync output, "\n"

# vim: ft=coffee:
